swagger: '2.0'
basePath: '/ga4gh/drs/v1'
info:
  title: Data Repository Service
  version: 0.1.0
  description: https://github.com/ga4gh/data-repository-service-schemas
  contact:
    name: GA4GH Cloud Work Stream
    email: ga4gh-cloud@ga4gh.org
    x-role: responsible developer
  license:
    name: Apache 2.0
    url: https://raw.githubusercontent.com/ga4gh/data-repository-service-schemas/master/LICENSE
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
security:
  - {}
  - authToken: []
paths:
  '/service-info':
    get:
      summary: Returns service version and other information
      operationId: GetServiceInfo
      responses:
        '200':
          description: Service information returned successfully
          schema:
            $ref: '#/definitions/ServiceInfoResponse'
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/bundles/{bundle_id}':
    get:
      summary: Retrieve a Data Bundle
      operationId: GetBundle
      responses:
        '200':
          description: Successfully found the Data Bundle.
          schema:
            $ref: '#/definitions/Bundle'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Bundle wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: bundle_id
          in: path
          required: true
          type: string
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/objects/{object_id}':
    get:
      summary: Retrieve a Data Object
      operationId: GetObject
      responses:
        '200':
          description: The Data Object was found successfully.
          schema:
            $ref: '#/definitions/GetObjectResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Object wasn't found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/objects/{object_id}/access/{access_id}':
    get:
      summary: Returns a fully resolvable URL that can be used to fetch the actual object bytes.
      operationId: GetAccessURL
      responses:
        '200':
          description: The access URL was found successfully.
          schema:
            $ref: '#/definitions/GetAccessURLResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested access URL wasn't found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
        - name: access_id
          in: path
          required: true
          type: string
          description: An 'access_id' from 'access_methods' list of a Data Object
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
securityDefinitions:
  authToken:
    description: |
      A valid authorization token must be passed in the 'Authorization' header.
      Example syntax for using 'Authorization' header :
        Bearer: token_string
    type: apiKey
    name: Authorization
    in: header
definitions:
  Checksum:
    type: object
    required: ['checksum']
    properties:
      checksum:
        type: string
        description: |-
          The hex-string encoded checksum for the Data.
      type:
        type: string
        description: |-
          The digest method used to create the checksum. If left unspecified md5
          will be assumed.

          possible values:
          md5                # most blob stores provide a checksum using this
          multipart-md5      # multipart uploads provide a specialized tag in S3
          sha256
          sha512
  Bundle:
    type: object
    properties:
      id:
        type: string
        description: >-
          An identifier, unique to this Data Bundle
      name:
        type: string
        description: |-
          A string that can be optionally used to name a Data Bundle.
      size:
        type: string
        format: int64
        description: |-
          The cumulative size of all Data Objects and Bundles listed within
          contents field in bytes.
      created:
        type: string
        format: date-time
        description: >-
          Timestamp of Bundle creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: >-
          Timestamp of Bundle update in RFC3339, identical to create timestamp in
          systems that do not support updates.
      version:
        type: string
        description: >-
          A string representing a version, some systems may use checksum, a
          RFC3339 timestamp, or incrementing version number.
      checksums:
        type: array
        description: >-
          At least one checksum must be provided.
          The Data Bundle checksum is computed over a sorted concatenation of all 
          the checksums (names not included) within the top-level 'contents' of the
          Bundle (not recursive). The list of Data Object or Bundle checksums are 
          sorted alphabetically (hex-code) before concatenation and a further checksum
          is performed on the concatenated checksum value.
          Example below:
          Data Ojects:
            md5(DO1) = 72794b6d30bc86d92e40a1aa65c880b8
            md5(DO2) = 5e089d29a18954e68a78ee6a3c6edabd
          Data Bundle:
          DB1 = md5( concat( sort( md5(DO1), md5(DO2) ) ) )
              = md5( concat( sort( 72794b6d30bc86d92e40a1aa65c880b8, 5e089d29a18954e68a78ee6a3c6edabd ) ) )
              = md5( concat( 5e089d29a18954e68a78ee6a3c6edabd, 72794b6d30bc86d92e40a1aa65c880b8 ) )
              = md5( 5e089d29a18954e68a78ee6a3c6edabd72794b6d30bc86d92e40a1aa65c880b8 )
              = f7a29a0422e7d870b10839ad6c985079
        items:
          $ref: '#/definitions/Checksum'
      description:
        type: string
        description: A human readable description.
      aliases:
        type: array
        description: |-
          A list of strings that can be used to find other metadata 
          about this Data Bundle from external metadata sources. These
          aliases can be used to represent the Data Bundle's secondary
          accession numbers or external GUIDs.
        items:
          type: string
      contents:
        type: array
        description: >-
          The list of Data Objects that this Data Bundle contains.
        items:
          $ref: '#/definitions/BundleObject'
    required:
      - id
      - size
      - created
      - checksums
      - contents
  Object:
    type: object
    required: ['id', 'size', 'created', 'checksums', 'access_methods']
    properties:
      id:
        type: string
        description: |-
          An identifier unique to this Data Object.
      name:
        type: string
        description: |-
          A string that can be optionally used to name a Data Object.
      size:
        type: string
        format: int64
        description: |-
          The computed size in bytes.
      created:
        type: string
        format: date-time
        description: |-
          Timestamp of object creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: |-
          Timestamp of update in RFC3339, identical to create timestamp in systems
          that do not support updates.
      version:
        type: string
        description: |-
          A string representing a version.
      mime_type:
        type: string
        description: |-
          A string providing the mime-type of the Data Object.
          For example, "application/json".
      checksums:
        type: array
        items:
          $ref: '#/definitions/Checksum'
        description: |-
          The checksum of the Data Object. At least one checksum must be provided.
      access_methods:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/AccessMethod'
        description: |-
          The list of access methods that can be used to access the Data Object.
      description:
        type: string
        description: |-
          A human readable description of the contents of the Data Object.
      aliases:
        type: array
        items:
          type: string
        description: |-
          A list of strings that can be used to find this Data Object.
          These aliases can be used to represent the Data Object's location in
          a directory (e.g. "bucket/folder/file.name") to make Data Objects
          more discoverable. They might also be used to represent
  GetObjectResponse:
    type: object
    required: ['object']
    properties:
      object:
        $ref: '#/definitions/Object'
  GetAccessURLResponse:
    type: object
    required: ['object']
    properties:
      access_url:
        type: string
        description: A fully resolvable access_url that can be used to fetch the actual object bytes.
  AccessMethod:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        enum:
        - s3
        - gs
        - ftp
        - sftp
        - http
        - https
        - nfs
        - globus
        - aspera
        - gsiftp
        - local
        description: >-
          Type of the access method.
      access_url:
        type: string
        description: >-
          A fully resolvable URL string that can be used to fetch the actual object bytes.
          Note that at least one of access_url and access_id must be provided.
      access_id:
        type: string
        description: >-
          An arbitrary string to be passed to the /access path to fetch an access_url.
          This must be unique per object.
          Note that at least one of access_url and access_id must be provided.
      region:
        type: string
        description: >-
          OPTIONAL
          Name of the region in the cloud service provider that the object belongs to.
        example:
          us-east-1
  ErrorResponse:
    description:
      An object that can optionally include information about the error.
    type: object
    properties:
      msg:
        type: string
        description: A detailed error message.
      status_code:
        type: integer
        description: The integer representing the HTTP status code (e.g. 200, 404).
  ServiceInfoResponse:
    type: object
    required: ['version']
    description: Placeholder for the Info Object
    properties:
      version:
        type: string
        description: Service version
      title:
        type: string
        description: Service name
      description:
        type: string
        description: Service description
      contact:
        type: object
        description: Maintainer contact info
      license:
        type: object
        description: License information for the exposed API
  BundleObject:
    type: object
    properties:
      name:
        type: string
        description: >-
          This represents the Bundle author declared name that must be
          used when materialising the associated data object and will 
          override any name directly associated with the object itself.
          This string MUST NOT contain any slashes.
      id:
        type: string
        description: >-
          This represents the DRS identifier that may point to a Data
          Object or another Data Bundle that will need to be recursed.
      drs_uri:
        type: array
        description: >-
          This represents a list of suggested full DRS identifier URI paths
          that may used obtain the Data Object or Data Bundle that will need
          to be recursed. These URIs may be external to this DRS.
        example: 'drs://example.com/ga4gh/drs/v1/objects/{object_id}'
      type:
        type: string
        enum:
          - object
          - bundle
        description: >-
          This represents the type of DRS object referenced within this
          Data Bundle. BundleObject of type bundle will need to be recursed
          further.
    required:
      - name
      - id
      - type
tags:
  - name: DataRepositoryService